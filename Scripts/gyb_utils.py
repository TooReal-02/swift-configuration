
def autogenerated_warning():
    return """
    // #############################################################################
    // #                                                                           #
    // #            DO NOT EDIT THIS FILE; IT IS AUTOGENERATED.                    #
    // #                                                                           #
    // #############################################################################
    """


primitive_types = [
    {"name": "String", "lowercase_name": "string", "type": "String"},
    {"name": "Int", "lowercase_name": "int", "type": "Int"},
    {"name": "Double", "lowercase_name": "double", "type": "Double"},
    {"name": "Bool", "lowercase_name": "bool", "type": "Bool"},
    {"name": "Bytes", "lowercase_name": "bytes", "type": "[UInt8]"},
    {"name": "StringArray", "lowercase_name": "stringArray", "type": "[String]"},
    {"name": "IntArray", "lowercase_name": "intArray", "type": "[Int]"},
    {"name": "DoubleArray", "lowercase_name": "doubleArray", "type": "[Double]"},
    {"name": "BoolArray", "lowercase_name": "boolArray", "type": "[Bool]"},
    {"name": "ByteChunkArray", "lowercase_name": "byteChunkArray", "type": "[[UInt8]]"},
]


def lower_first(s):
    return s[:1].lower() + s[1:]


string_convertible_types = [
    {
        "protocol": "ExpressibleByConfigString",
        "testType": "TestStringConvertible",
        "testSuffix": "StringConvertible"
    },
    {
        "protocol": "RawRepresentable<String>",
        "testType": "TestEnum",
        "testSuffix": "StringEnum"
    },
]
